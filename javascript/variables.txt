##### V A R I A B L E S   -   П Е Р Е М Е Н Н Ы Е #####

##### Объявление переменной #####

let x - объявление переменной с помощью let
let x = 1 - объявление переменной и присваивание значений с помощью let

const x - ошибка! нельзя объявить const без присвоения
const x = 1 - объявление переменной и присваивание значений с помощью const

var x - объявление переменной с помощью var (способ устарел)
var x = 1 - объявление переменной и присваивание значений с помощью var


Отличие let от var:﻿ Переменная, объявленная через var, видна везде в функции. Переменная, объявленная через let, видна только в рамках блока {...}, в котором объявлена.


##### Интерполяция #####

const first = 'Hello'
const second = 'World'
 `${first}, ${second}!` - интерполяция работает только в бэктиках `, с помощью интерполяции можно гораздо проще добавлять переменные в текст, она помогает не путать строки с числами

`В интерполяцию можно вставлять выражения: ${1 + 2 * 6} и ${"строки"}`

#####

let myName = "Dima";

alert (typeof myName); - Определение типа данных

String

##### Примеры #####

console.log(a) //ReferenceError: a is not defined

let a - объявление

console.log(a) //undefined

a = true

console.log(a) //true

##### LET #####

Значения let можно переприсвоить

let a = 10
a = 20

##### CONST #####

Значения const нельзя переприсвоить

const b = 10
b = 20
//TypeError

const a = 10 - тип переменной - строка
const b = 'abc' - тип переменной - число


##### Статическая типизация #####

String a = 'abc'

int b = 10

b = 'xyz' //Error


##### Значения переменных #####

- Число (number)

- Строка (string)

- Логическая (boolean)

- Неопределенная (undefined) - значение не присвоено

- Пустая (null) - присваивается пользователем

- Объект (object)

typeof x - узнать тип переменной
typeof 'x' - узнать тип переменной

##### Объект #####

const objectA = {
a: 10,
b: true
}

objectA.a - получаем доступ к свойству объекта a

const copyOfA = objectA - две переменные с одинаковыми ссылками на объект в другом месте памяти

copyOfA.a = 20 - изменяем свойство a объекта objectA

#####

const myCity = { 
    city: 'NewYork'
} //объявление объекта myCity

myCity.pupular = true //добавление свойства

myCity['country'] = 'USA' //добавление свойства если свойство в переменной

delete myCity.country //удаление свойства

console.log(myCity) //выведение в консоль

