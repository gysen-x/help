##### A R R A Y  -  М А С С И В #####

Нумерация массива начинается с 0.

const array = [1, 2, 3] - создать массив

const array = new Array(1, 2, 3) - создать массив

array[0] - обратиться к первому элементу массива

array[0] = 3 - заменить первый элемент массива на "3"

##### Перебор элементов #####

for (let i = 0; i < array.length; i++) {} - перебор элементов с помощью цикла for

for (let i of array) {} - перебор значений элементов с помощью цикла for...of


##### Методы массивов #####


##### L E N G T H #####

array.length - количество элементов массива 

array.length = 0 - стереть элементы массива


##### I N D E X O F #####

array.indexOf(item, from) - ищет item, начиная с индекса from, и возвращает индекс, на котором был найден искомый элемент, в противном случае -1

array.lastIndexOf(item, from) - то же что и indexOf, но ищет справа на лево


##### P U S H #####

array.push(item) - добавляет один элемент в конец массива и возвращает длину массива

array[array.length] = item - аналогичная команда, но она возвращает количество переданных выражений


##### P O P #####

array.pop() - удаляет последний элемент массива и возвращает его (ничего не принимает)

array.at(-1) - только возвращает последний элемент, не изменяя массив


##### S H I F T #####

array.shift() - удаляет первый элемент массива и возвращает его


##### U N S H I F T #####

array.unshift(0) - добавляет элемент в начало массива и возвращает количество элементов


##### S L I C E #####


array.slice(0, 2) - возвращает указанную часть массива не изменяя его

array.slice() - возвращает копию массива


##### S P L I C E #####

array.splice(1, 2, 'one', 'two') - удаляет с первого индекса указанное количество элементов (2), добавляет указанные элементы


##### R E V E R S E #####

array.reverse() - меняет зеркально последовательность элементов в массиве


##### C A N C A T #####

array.cancat(array) - канкатенирует массив с другим массивом или элементами


##### J O I N #####

array.join(' ') - возвращает строку с элементами, разделенную аргументом


##### S P L I T #####

array.split('') - разбивает строку на массив по разделителю, если указать пустую строку, то вернет по символам


##### F O R   E A C H #####

array.forEach(function(item, index, array)) - запускает функцию для каждого элемента массива, ничего не возвращает


##### S O M E #####

array.some(test => test === '1') - проверяет элементы массива, соответствует ли хоть один из них условию(возвращает true или false)


##### E V E R Y #####

array.every(test => test === '1') - проверяет все элементы массива на соответствие условию(возвращает true или false)


##### R E D U C E #####

array.reduce((total, value) => total * value) - принимает функцию с аккумулятором и значением, применяет к каждому значению массива и возвращает одно значение


##### M A P #####

array.map(x => x * x) - принимает функцию в качестве параметра и создает новый массив с результатом для каждого элемента массива


##### F L A T #####

array.flat() - принимает массив массивов и сглаживает вложенные массивы в массив верхнего уровня (метод работает только для одного уровня)


##### F I L T E R #####

array.filter()


##### F I N D I N D E X #####

array.findIndex()


##### F I N D #####

array.find()


##### S O R T ######

array.sort()


##### F I L L #####

array.fill()


##### I N C L U D E S #####

array.includes(item, from) - ищет item, начиная с индекса from, и возвращает true, если поиск успешен.


##### F L A T M A P #####

array.flatMap() 
