##### .GITIGNORE #####

- логи
- пользовательские файлы
- служебные файлы среды разработки
- внешние библиотеки
- файлы локальной конфигурации
- файлы операционной системы
- слишком большие файлы

.gitignore
txt.logs - можно указать имя файла, чтобы он не отслеживался
*.logs - можно указать формат файла, чтобы он не отслеживался
logs/ - можно указать папку, чтобы она не отслеживалась
logs/*.log - все файлы указанного формата в данной папке не будут отслеживаться
!txt.log - не исключать данный файл (если папка полностью исключена, то не будет работать)

*.log - маска для формата файла
logs/ - исключить папку
!logs/sample.log - отрицание паттерна

# Игнорировать файл foo.txt.
foo.txt
# Игнорировать html файлы
*.html
# Но конкретно foo.html не игнорировать
!foo.html
# Игнорировать rar файлы в корне проекта
# Допустим файл /temp/main.rar не будет проигнорирован т.к. он не в корне
/*.rar
# Игнорировать css файлы из папки bar не включая подпапки
# Допустим файл /bar/temp/main.css не будет проигнорирован т.к. он в подпапке temp
/bar/*.css
# Игнорировать js файлы из папки bar и подпапок, если таковые будут
/bar/**.*.js


├── js
│   ├── app.js
│   └── system.js
├── scss
│   ├── system.scss
│   └── theme.scss
└── vendor
    ├── node_modules       <-- Убрать
    │   ├── load-json-file
    │   ├── lodash
    │   ├── jquery         <-- Оставить
    │   ├── make-error
    │   ├── semantic       <-- Оставить
    │   └── yargs
    └── semantic.json

/vendor/node_modules/*
!/vendor/node_modules/jquery/
!/vendor/node_modules/semantic/



├── js
│   ├── app.js
│   └── system.js
├── scss
│   ├── system.scss
│   └── theme.scss
└── vendor
    ├── node_modules       <-- Убрать
    │   ├── load-json-file
    │   ├── lodash
    │   ├── jquery
    │   │   └──dist        <-- Оставить
    │   ├── make-error
    │   ├── semantic
    │   └── yargs
    └── semantic.json
Решение:

/vendor/node_modules/*
/vendor/node_modules/jquery/*
!/vendor/node_modules/jquery/
!/vendor/node_modules/jquery/dist/


Как игнорировать файлы, которые уже отслеживаются?
Если вы добавили файл или папку в .gitignore, после того как они попали в репозиторий, то их необходимо удалить из репозитория командой:

git rm --cached <file>
Например убрать папку storage/framework/cache/. Обратите внимание: вначале отсутствует слеш.

git rm -r --cached "storage/framework/cache/"