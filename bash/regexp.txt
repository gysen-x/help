##### R E G E X P #####

- механизм для поиска и замены текста.


##### Создать регулярное выражение #####

const regexp = new RegExp('шаблон','флаги')

const regexp = /шаблон/флаги


##### Флаги #####

/текст/g - флаг global, ищет все вхождения текста

/текст/m - флаг multiline, ищет на всех строках

/текст/i - регистронезависимость


##### Шаблон #####

[123] - вхождение любого символа из перечисленных

[0-9] - вхождение любого символа из диапазона

[0-13-9] - вхождение любого символа из диапазона кроме 2

[^0-9] - вхождение любого символа кроме диапазона

/[взкд]ол/g - найдет вол, зол, кол, дол

\ - символ экранирования (экранировать нужно спецсимволы ' []\^$.|?*+() ')

. - любой символ (для поиска точки в тексте придется использовать экранирование

\d = [0-9]

\D = [^0-9]

\w = [a-zA-Z0-9_]

\W = [^a-zA-Z0-9_]

\s = [\t\n\v\f\r]

\S = [^\t\n\v\f\r]

\t - поиск символа табуляции

\r - символ возврата каретки

\n - символ перевода строки

/\d\.\d/ - /Цифра.Цифра/ 5.5

/\d.\d/ - /ЦифраСимволЦифра/ 5Щ5


##### Границы строки #####

^ - начало строки (указывается перед строкой)

$ - конец строки (указывается после строки)

/+7\d/ - /+7Цифра/

/^+7\d/ - /+7Цифра/ в начале строки

/+7\d$ - /+7Цифра/ в конце строки


##### Квантификаторы #####

{n} - ровно n вхождений

\d{6} - срабатывает на 6 цифр подряд

{2, 4} - от 2 до 4 вхождений

{3,} - 3 и более вхождений

+ = {1,}

* = {0,}

? = {0,1}
